/// <reference types="node" />
import * as gax from 'google-gax';
import { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Cloud Tasks allows developers to manage the execution of background
 *  work in their applications.
 * @class
 * @memberof v2beta2
 */
export declare class CloudTasksClient {
    private _terminated;
    private _opts;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    cloudTasksStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of CloudTasksClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP fallback mode.
     *     In fallback mode, a special browser-compatible transport implementation is used
     *     instead of gRPC transport. In browser context (if the `window` object is defined)
     *     the fallback mode is enabled automatically; set `options.fallback` to `false`
     *     if you need to override this behavior.
     */
    constructor(opts?: ClientOptions);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    getQueue(request: protos.google.cloud.tasks.v2beta2.IGetQueueRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IGetQueueRequest | undefined, {} | undefined]>;
    getQueue(request: protos.google.cloud.tasks.v2beta2.IGetQueueRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IGetQueueRequest | null | undefined, {} | null | undefined>): void;
    getQueue(request: protos.google.cloud.tasks.v2beta2.IGetQueueRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IGetQueueRequest | null | undefined, {} | null | undefined>): void;
    createQueue(request: protos.google.cloud.tasks.v2beta2.ICreateQueueRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.ICreateQueueRequest | undefined, {} | undefined]>;
    createQueue(request: protos.google.cloud.tasks.v2beta2.ICreateQueueRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.ICreateQueueRequest | null | undefined, {} | null | undefined>): void;
    createQueue(request: protos.google.cloud.tasks.v2beta2.ICreateQueueRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.ICreateQueueRequest | null | undefined, {} | null | undefined>): void;
    updateQueue(request: protos.google.cloud.tasks.v2beta2.IUpdateQueueRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IUpdateQueueRequest | undefined, {} | undefined]>;
    updateQueue(request: protos.google.cloud.tasks.v2beta2.IUpdateQueueRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IUpdateQueueRequest | null | undefined, {} | null | undefined>): void;
    updateQueue(request: protos.google.cloud.tasks.v2beta2.IUpdateQueueRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IUpdateQueueRequest | null | undefined, {} | null | undefined>): void;
    deleteQueue(request: protos.google.cloud.tasks.v2beta2.IDeleteQueueRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.cloud.tasks.v2beta2.IDeleteQueueRequest | undefined, {} | undefined]>;
    deleteQueue(request: protos.google.cloud.tasks.v2beta2.IDeleteQueueRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.tasks.v2beta2.IDeleteQueueRequest | null | undefined, {} | null | undefined>): void;
    deleteQueue(request: protos.google.cloud.tasks.v2beta2.IDeleteQueueRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.tasks.v2beta2.IDeleteQueueRequest | null | undefined, {} | null | undefined>): void;
    purgeQueue(request: protos.google.cloud.tasks.v2beta2.IPurgeQueueRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IPurgeQueueRequest | undefined, {} | undefined]>;
    purgeQueue(request: protos.google.cloud.tasks.v2beta2.IPurgeQueueRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IPurgeQueueRequest | null | undefined, {} | null | undefined>): void;
    purgeQueue(request: protos.google.cloud.tasks.v2beta2.IPurgeQueueRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IPurgeQueueRequest | null | undefined, {} | null | undefined>): void;
    pauseQueue(request: protos.google.cloud.tasks.v2beta2.IPauseQueueRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IPauseQueueRequest | undefined, {} | undefined]>;
    pauseQueue(request: protos.google.cloud.tasks.v2beta2.IPauseQueueRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IPauseQueueRequest | null | undefined, {} | null | undefined>): void;
    pauseQueue(request: protos.google.cloud.tasks.v2beta2.IPauseQueueRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IPauseQueueRequest | null | undefined, {} | null | undefined>): void;
    resumeQueue(request: protos.google.cloud.tasks.v2beta2.IResumeQueueRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IResumeQueueRequest | undefined, {} | undefined]>;
    resumeQueue(request: protos.google.cloud.tasks.v2beta2.IResumeQueueRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IResumeQueueRequest | null | undefined, {} | null | undefined>): void;
    resumeQueue(request: protos.google.cloud.tasks.v2beta2.IResumeQueueRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.IQueue, protos.google.cloud.tasks.v2beta2.IResumeQueueRequest | null | undefined, {} | null | undefined>): void;
    getIamPolicy(request: protos.google.iam.v1.IGetIamPolicyRequest, options?: CallOptions): Promise<[protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | undefined, {} | undefined]>;
    getIamPolicy(request: protos.google.iam.v1.IGetIamPolicyRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    getIamPolicy(request: protos.google.iam.v1.IGetIamPolicyRequest, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    setIamPolicy(request: protos.google.iam.v1.ISetIamPolicyRequest, options?: CallOptions): Promise<[protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | undefined, {} | undefined]>;
    setIamPolicy(request: protos.google.iam.v1.ISetIamPolicyRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    setIamPolicy(request: protos.google.iam.v1.ISetIamPolicyRequest, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    testIamPermissions(request: protos.google.iam.v1.ITestIamPermissionsRequest, options?: CallOptions): Promise<[protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | undefined, {} | undefined]>;
    testIamPermissions(request: protos.google.iam.v1.ITestIamPermissionsRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined, {} | null | undefined>): void;
    testIamPermissions(request: protos.google.iam.v1.ITestIamPermissionsRequest, callback: Callback<protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined, {} | null | undefined>): void;
    getTask(request: protos.google.cloud.tasks.v2beta2.IGetTaskRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.IGetTaskRequest | undefined, {} | undefined]>;
    getTask(request: protos.google.cloud.tasks.v2beta2.IGetTaskRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.IGetTaskRequest | null | undefined, {} | null | undefined>): void;
    getTask(request: protos.google.cloud.tasks.v2beta2.IGetTaskRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.IGetTaskRequest | null | undefined, {} | null | undefined>): void;
    createTask(request: protos.google.cloud.tasks.v2beta2.ICreateTaskRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.ICreateTaskRequest | undefined, {} | undefined]>;
    createTask(request: protos.google.cloud.tasks.v2beta2.ICreateTaskRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.ICreateTaskRequest | null | undefined, {} | null | undefined>): void;
    createTask(request: protos.google.cloud.tasks.v2beta2.ICreateTaskRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.ICreateTaskRequest | null | undefined, {} | null | undefined>): void;
    deleteTask(request: protos.google.cloud.tasks.v2beta2.IDeleteTaskRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.cloud.tasks.v2beta2.IDeleteTaskRequest | undefined, {} | undefined]>;
    deleteTask(request: protos.google.cloud.tasks.v2beta2.IDeleteTaskRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.tasks.v2beta2.IDeleteTaskRequest | null | undefined, {} | null | undefined>): void;
    deleteTask(request: protos.google.cloud.tasks.v2beta2.IDeleteTaskRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.tasks.v2beta2.IDeleteTaskRequest | null | undefined, {} | null | undefined>): void;
    leaseTasks(request: protos.google.cloud.tasks.v2beta2.ILeaseTasksRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.ILeaseTasksResponse, protos.google.cloud.tasks.v2beta2.ILeaseTasksRequest | undefined, {} | undefined]>;
    leaseTasks(request: protos.google.cloud.tasks.v2beta2.ILeaseTasksRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.ILeaseTasksResponse, protos.google.cloud.tasks.v2beta2.ILeaseTasksRequest | null | undefined, {} | null | undefined>): void;
    leaseTasks(request: protos.google.cloud.tasks.v2beta2.ILeaseTasksRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.ILeaseTasksResponse, protos.google.cloud.tasks.v2beta2.ILeaseTasksRequest | null | undefined, {} | null | undefined>): void;
    acknowledgeTask(request: protos.google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest | undefined, {} | undefined]>;
    acknowledgeTask(request: protos.google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest | null | undefined, {} | null | undefined>): void;
    acknowledgeTask(request: protos.google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.tasks.v2beta2.IAcknowledgeTaskRequest | null | undefined, {} | null | undefined>): void;
    renewLease(request: protos.google.cloud.tasks.v2beta2.IRenewLeaseRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.IRenewLeaseRequest | undefined, {} | undefined]>;
    renewLease(request: protos.google.cloud.tasks.v2beta2.IRenewLeaseRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.IRenewLeaseRequest | null | undefined, {} | null | undefined>): void;
    renewLease(request: protos.google.cloud.tasks.v2beta2.IRenewLeaseRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.IRenewLeaseRequest | null | undefined, {} | null | undefined>): void;
    cancelLease(request: protos.google.cloud.tasks.v2beta2.ICancelLeaseRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.ICancelLeaseRequest | undefined, {} | undefined]>;
    cancelLease(request: protos.google.cloud.tasks.v2beta2.ICancelLeaseRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.ICancelLeaseRequest | null | undefined, {} | null | undefined>): void;
    cancelLease(request: protos.google.cloud.tasks.v2beta2.ICancelLeaseRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.ICancelLeaseRequest | null | undefined, {} | null | undefined>): void;
    runTask(request: protos.google.cloud.tasks.v2beta2.IRunTaskRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.IRunTaskRequest | undefined, {} | undefined]>;
    runTask(request: protos.google.cloud.tasks.v2beta2.IRunTaskRequest, options: CallOptions, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.IRunTaskRequest | null | undefined, {} | null | undefined>): void;
    runTask(request: protos.google.cloud.tasks.v2beta2.IRunTaskRequest, callback: Callback<protos.google.cloud.tasks.v2beta2.ITask, protos.google.cloud.tasks.v2beta2.IRunTaskRequest | null | undefined, {} | null | undefined>): void;
    listQueues(request: protos.google.cloud.tasks.v2beta2.IListQueuesRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.IQueue[], protos.google.cloud.tasks.v2beta2.IListQueuesRequest | null, protos.google.cloud.tasks.v2beta2.IListQueuesResponse]>;
    listQueues(request: protos.google.cloud.tasks.v2beta2.IListQueuesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.tasks.v2beta2.IListQueuesRequest, protos.google.cloud.tasks.v2beta2.IListQueuesResponse | null | undefined, protos.google.cloud.tasks.v2beta2.IQueue>): void;
    listQueues(request: protos.google.cloud.tasks.v2beta2.IListQueuesRequest, callback: PaginationCallback<protos.google.cloud.tasks.v2beta2.IListQueuesRequest, protos.google.cloud.tasks.v2beta2.IListQueuesResponse | null | undefined, protos.google.cloud.tasks.v2beta2.IQueue>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The location name.
     *   For example: `projects/PROJECT_ID/locations/LOCATION_ID`
     * @param {string} request.filter
     *   `filter` can be used to specify a subset of queues. Any {@link google.cloud.tasks.v2beta2.Queue|Queue}
     *   field can be used as a filter and several operators as supported.
     *   For example: `<=, <, >=, >, !=, =, :`. The filter syntax is the same as
     *   described in
     *   [Stackdriver's Advanced Logs
     *   Filters](https://cloud.google.com/logging/docs/view/advanced_filters).
     *
     *   Sample filter "app_engine_http_target: *".
     *
     *   Note that using filters might cause fewer queues than the
     *   requested_page size to be returned.
     * @param {number} request.pageSize
     *   Requested page size.
     *
     *   The maximum page size is 9800. If unspecified, the page size will
     *   be the maximum. Fewer queues than requested might be returned,
     *   even if more queues exist; use the
     *   {@link google.cloud.tasks.v2beta2.ListQueuesResponse.next_page_token|next_page_token} in the
     *   response to determine if more queues exist.
     * @param {string} request.pageToken
     *   A token identifying the page of results to return.
     *
     *   To request the first page results, page_token must be empty. To
     *   request the next page of results, page_token must be the value of
     *   {@link google.cloud.tasks.v2beta2.ListQueuesResponse.next_page_token|next_page_token} returned
     *   from the previous call to {@link google.cloud.tasks.v2beta2.CloudTasks.ListQueues|ListQueues}
     *   method. It is an error to switch the value of the
     *   {@link google.cloud.tasks.v2beta2.ListQueuesRequest.filter|filter} while iterating through pages.
     * @param {google.protobuf.FieldMask} [request.readMask]
     *   Optional. Read mask is used for a more granular control over what the API returns.
     *   If the mask is not present all fields will be returned except
     *   [Queue.stats]. [Queue.stats] will be returned only if it was  explicitly
     *   specified in the mask.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [Queue]{@link google.cloud.tasks.v2beta2.Queue} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listQueuesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     */
    listQueuesStream(request?: protos.google.cloud.tasks.v2beta2.IListQueuesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listQueues`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The location name.
     *   For example: `projects/PROJECT_ID/locations/LOCATION_ID`
     * @param {string} request.filter
     *   `filter` can be used to specify a subset of queues. Any {@link google.cloud.tasks.v2beta2.Queue|Queue}
     *   field can be used as a filter and several operators as supported.
     *   For example: `<=, <, >=, >, !=, =, :`. The filter syntax is the same as
     *   described in
     *   [Stackdriver's Advanced Logs
     *   Filters](https://cloud.google.com/logging/docs/view/advanced_filters).
     *
     *   Sample filter "app_engine_http_target: *".
     *
     *   Note that using filters might cause fewer queues than the
     *   requested_page size to be returned.
     * @param {number} request.pageSize
     *   Requested page size.
     *
     *   The maximum page size is 9800. If unspecified, the page size will
     *   be the maximum. Fewer queues than requested might be returned,
     *   even if more queues exist; use the
     *   {@link google.cloud.tasks.v2beta2.ListQueuesResponse.next_page_token|next_page_token} in the
     *   response to determine if more queues exist.
     * @param {string} request.pageToken
     *   A token identifying the page of results to return.
     *
     *   To request the first page results, page_token must be empty. To
     *   request the next page of results, page_token must be the value of
     *   {@link google.cloud.tasks.v2beta2.ListQueuesResponse.next_page_token|next_page_token} returned
     *   from the previous call to {@link google.cloud.tasks.v2beta2.CloudTasks.ListQueues|ListQueues}
     *   method. It is an error to switch the value of the
     *   {@link google.cloud.tasks.v2beta2.ListQueuesRequest.filter|filter} while iterating through pages.
     * @param {google.protobuf.FieldMask} [request.readMask]
     *   Optional. Read mask is used for a more granular control over what the API returns.
     *   If the mask is not present all fields will be returned except
     *   [Queue.stats]. [Queue.stats] will be returned only if it was  explicitly
     *   specified in the mask.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
     *   When you iterate the returned iterable, each element will be an object representing
     *   [Queue]{@link google.cloud.tasks.v2beta2.Queue}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     * @example
     * const iterable = client.listQueuesAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     */
    listQueuesAsync(request?: protos.google.cloud.tasks.v2beta2.IListQueuesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.tasks.v2beta2.IQueue>;
    listTasks(request: protos.google.cloud.tasks.v2beta2.IListTasksRequest, options?: CallOptions): Promise<[protos.google.cloud.tasks.v2beta2.ITask[], protos.google.cloud.tasks.v2beta2.IListTasksRequest | null, protos.google.cloud.tasks.v2beta2.IListTasksResponse]>;
    listTasks(request: protos.google.cloud.tasks.v2beta2.IListTasksRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.tasks.v2beta2.IListTasksRequest, protos.google.cloud.tasks.v2beta2.IListTasksResponse | null | undefined, protos.google.cloud.tasks.v2beta2.ITask>): void;
    listTasks(request: protos.google.cloud.tasks.v2beta2.IListTasksRequest, callback: PaginationCallback<protos.google.cloud.tasks.v2beta2.IListTasksRequest, protos.google.cloud.tasks.v2beta2.IListTasksResponse | null | undefined, protos.google.cloud.tasks.v2beta2.ITask>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The queue name. For example:
     *   `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
     * @param {google.cloud.tasks.v2beta2.Task.View} request.responseView
     *   The response_view specifies which subset of the {@link google.cloud.tasks.v2beta2.Task|Task} will be
     *   returned.
     *
     *   By default response_view is {@link google.cloud.tasks.v2beta2.Task.View.BASIC|BASIC}; not all
     *   information is retrieved by default because some data, such as
     *   payloads, might be desirable to return only when needed because
     *   of its large size or because of the sensitivity of data that it
     *   contains.
     *
     *   Authorization for {@link google.cloud.tasks.v2beta2.Task.View.FULL|FULL} requires
     *   `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
     *   permission on the {@link google.cloud.tasks.v2beta2.Task|Task} resource.
     * @param {number} request.pageSize
     *   Maximum page size.
     *
     *   Fewer tasks than requested might be returned, even if more tasks exist; use
     *   {@link google.cloud.tasks.v2beta2.ListTasksResponse.next_page_token|next_page_token} in the response to
     *   determine if more tasks exist.
     *
     *   The maximum page size is 1000. If unspecified, the page size will be the
     *   maximum.
     * @param {string} request.pageToken
     *   A token identifying the page of results to return.
     *
     *   To request the first page results, page_token must be empty. To
     *   request the next page of results, page_token must be the value of
     *   {@link google.cloud.tasks.v2beta2.ListTasksResponse.next_page_token|next_page_token} returned
     *   from the previous call to {@link google.cloud.tasks.v2beta2.CloudTasks.ListTasks|ListTasks}
     *   method.
     *
     *   The page token is valid for only 2 hours.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [Task]{@link google.cloud.tasks.v2beta2.Task} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listTasksAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     */
    listTasksStream(request?: protos.google.cloud.tasks.v2beta2.IListTasksRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listTasks`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The queue name. For example:
     *   `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
     * @param {google.cloud.tasks.v2beta2.Task.View} request.responseView
     *   The response_view specifies which subset of the {@link google.cloud.tasks.v2beta2.Task|Task} will be
     *   returned.
     *
     *   By default response_view is {@link google.cloud.tasks.v2beta2.Task.View.BASIC|BASIC}; not all
     *   information is retrieved by default because some data, such as
     *   payloads, might be desirable to return only when needed because
     *   of its large size or because of the sensitivity of data that it
     *   contains.
     *
     *   Authorization for {@link google.cloud.tasks.v2beta2.Task.View.FULL|FULL} requires
     *   `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
     *   permission on the {@link google.cloud.tasks.v2beta2.Task|Task} resource.
     * @param {number} request.pageSize
     *   Maximum page size.
     *
     *   Fewer tasks than requested might be returned, even if more tasks exist; use
     *   {@link google.cloud.tasks.v2beta2.ListTasksResponse.next_page_token|next_page_token} in the response to
     *   determine if more tasks exist.
     *
     *   The maximum page size is 1000. If unspecified, the page size will be the
     *   maximum.
     * @param {string} request.pageToken
     *   A token identifying the page of results to return.
     *
     *   To request the first page results, page_token must be empty. To
     *   request the next page of results, page_token must be the value of
     *   {@link google.cloud.tasks.v2beta2.ListTasksResponse.next_page_token|next_page_token} returned
     *   from the previous call to {@link google.cloud.tasks.v2beta2.CloudTasks.ListTasks|ListTasks}
     *   method.
     *
     *   The page token is valid for only 2 hours.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
     *   When you iterate the returned iterable, each element will be an object representing
     *   [Task]{@link google.cloud.tasks.v2beta2.Task}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     * @example
     * const iterable = client.listTasksAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     */
    listTasksAsync(request?: protos.google.cloud.tasks.v2beta2.IListTasksRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.tasks.v2beta2.ITask>;
    /**
     * Return a fully-qualified location resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @returns {string} Resource name string.
     */
    locationPath(project: string, location: string): string;
    /**
     * Parse the project from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromLocationName(locationName: string): string | number;
    /**
     * Parse the location from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromLocationName(locationName: string): string | number;
    /**
     * Return a fully-qualified project resource name string.
     *
     * @param {string} project
     * @returns {string} Resource name string.
     */
    projectPath(project: string): string;
    /**
     * Parse the project from Project resource.
     *
     * @param {string} projectName
     *   A fully-qualified path representing Project resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectName(projectName: string): string | number;
    /**
     * Return a fully-qualified queue resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} queue
     * @returns {string} Resource name string.
     */
    queuePath(project: string, location: string, queue: string): string;
    /**
     * Parse the project from Queue resource.
     *
     * @param {string} queueName
     *   A fully-qualified path representing Queue resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromQueueName(queueName: string): string | number;
    /**
     * Parse the location from Queue resource.
     *
     * @param {string} queueName
     *   A fully-qualified path representing Queue resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromQueueName(queueName: string): string | number;
    /**
     * Parse the queue from Queue resource.
     *
     * @param {string} queueName
     *   A fully-qualified path representing Queue resource.
     * @returns {string} A string representing the queue.
     */
    matchQueueFromQueueName(queueName: string): string | number;
    /**
     * Return a fully-qualified task resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} queue
     * @param {string} task
     * @returns {string} Resource name string.
     */
    taskPath(project: string, location: string, queue: string, task: string): string;
    /**
     * Parse the project from Task resource.
     *
     * @param {string} taskName
     *   A fully-qualified path representing Task resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromTaskName(taskName: string): string | number;
    /**
     * Parse the location from Task resource.
     *
     * @param {string} taskName
     *   A fully-qualified path representing Task resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromTaskName(taskName: string): string | number;
    /**
     * Parse the queue from Task resource.
     *
     * @param {string} taskName
     *   A fully-qualified path representing Task resource.
     * @returns {string} A string representing the queue.
     */
    matchQueueFromTaskName(taskName: string): string | number;
    /**
     * Parse the task from Task resource.
     *
     * @param {string} taskName
     *   A fully-qualified path representing Task resource.
     * @returns {string} A string representing the task.
     */
    matchTaskFromTaskName(taskName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
